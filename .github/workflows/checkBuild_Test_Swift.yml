# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: CheckBuild_Test_Swift

on:
  push:
  pull_request:
    branches:
      - "main"
    paths-ignore:
      - README.md

env:
  # チェックアウト
  DEVELOPER_DIR: /Applications/Xcode_15.0.app

jobs:
  build:
    # 実行環境はmacosに設定
    runs-on: macos-13

    steps:
      # チェックアウト(リポジトリからソースコードを取得)
      - uses: actions/checkout@v3

      # Xcodeの一覧出力
      - name: Show Xcode list
        run: ls /Applications | grep 'Xcode'

      # Xcodeのバージョン出力
      - name: Show Xcode version
        run: xcodebuild -version

      # Rudy製ライブラリのキャッシュ
      - name: Cache Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      # Rudy製ライブラリのインストール
      - name: Install Bundled Gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      # SPMのライブラリのキャッシュ
      - name: Cache Swift Packages
        uses: actions/cache@v2
        with:
          path: SourcePackages
          key: ${{ runner.os }}-spm-${{ hashFiles('*.xcodeproj/project.xcworkspace/ xcshareddata/swiftpm/Package.resolved') }}
          restore-keys: ${{ runner.os }}-spm-

      # ビルド
      - name: Xcode build
        run: set -o pipefail &&
          xcodebuild
          -workspace ./WeatherWatcher/WeatherWatcher.xcworkspace
          -scheme WeatherWatcher
          -sdk iphonesimulator
          -configuration Debug
          -resolvePackageDependencies
          -clonedSourcePackagesDirPath SourcePackages
          -scmProvider xcode
          build |
          bundle exec xcpretty
